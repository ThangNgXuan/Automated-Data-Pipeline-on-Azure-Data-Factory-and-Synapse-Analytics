{
	"name": "Aggregate Payroll Data",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Sink_dts_payroll_2021_synapse_gen2",
						"type": "DatasetReference"
					},
					"name": "Payroll2021",
					"description": "Import data from Synapse"
				},
				{
					"dataset": {
						"referenceName": "Source_dts_payroll_2020_gen2",
						"type": "DatasetReference"
					},
					"name": "Payroll2020",
					"description": "Import data from Gen2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Sink_dts_summary_table_synapse",
						"type": "DatasetReference"
					},
					"name": "Synapse"
				}
			],
			"transformations": [
				{
					"name": "Union",
					"description": "Merging rows from 'Payroll2021, Payroll2020'"
				},
				{
					"name": "FilterbyFiscalYear"
				},
				{
					"name": "AddColumn"
				},
				{
					"name": "GroupBy"
				}
			],
			"scriptLines": [
				"parameters{",
				"     dataflow_param_fiscalyear as integer (2019)",
				"}",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Payroll2021",
				"source(output(",
				"          FiscalYear as string,",
				"          PayrollNumber as string,",
				"          AgencyID as string,",
				"          AgencyName as string,",
				"          EmployeeID as string,",
				"          LastName as string,",
				"          FirstName as string,",
				"          AgencyStartDate as string,",
				"          WorkLocationBorough as string,",
				"          TitleCode as string,",
				"          TitleDescription as string,",
				"          LeaveStatusasofJune30 as string,",
				"          BaseSalary as string,",
				"          PayBasis as string,",
				"          RegularHours as string,",
				"          RegularGrossPaid as string,",
				"          OTHours as string,",
				"          TotalOTPaid as string,",
				"          TotalOtherPay as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Payroll2020",
				"Payroll2021, Payroll2020 union(byName: true)~> Union",
				"Union filter(toInteger(FiscalYear) >= $dataflow_param_fiscalyear) ~> FilterbyFiscalYear",
				"FilterbyFiscalYear derive(TotalPaid = toInteger(RegularGrossPaid)+toInteger(TotalOTPaid)+toInteger(TotalOtherPay)) ~> AddColumn",
				"AddColumn aggregate(groupBy(AgencyName,",
				"          FiscalYear),",
				"     {TotalPaid } = sum(toInteger(TotalPaid))) ~> GroupBy",
				"GroupBy sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Synapse"
			]
		}
	}
}